{"ast":null,"code":"var _jsxFileName = \"/Users/aleenaalby/Documents/MERN/Netflix-Clone-/src/Components/RowPost/RowPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './RowPost.css';\nimport YouTube from 'react-youtube';\nimport { imageUrl } from '../../constants/constants';\nimport axios from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RowPost(props) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  cosnt[(id, setId)] = useState('');\n  useEffect(() => {\n    axios.get(props.url).then(res => {\n      console.log(res.data.results);\n      setMovies(res.data.results);\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n\n  const handleMovie = id => {\n    console.log(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovie(obj.id),\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        src: ` ${imageUrl + obj.backdrop_path}`,\n        alt: \"POsters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: \"2g811Eo7K8U\",\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RowPost, \"f/xmGWBpcUBMXS0hWuAHSlGctxk=\");\n\n_c = RowPost;\nexport default RowPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"sources":["/Users/aleenaalby/Documents/MERN/Netflix-Clone-/src/Components/RowPost/RowPost.js"],"names":["React","useEffect","useState","YouTube","imageUrl","axios","RowPost","props","movies","setMovies","cosnt","id","setId","get","url","then","res","console","log","data","results","opts","height","width","playerVars","autoplay","handleMovie","title","map","obj","isSmall","backdrop_path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACAQ,EAAAA,KAAK,EAAEC,EAAE,EAACC,KAAL,EAAL,GAAmBV,QAAQ,CAAC,EAAD,CAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACQ,GAAN,CAAUN,KAAK,CAACO,GAAhB,EACCC,IADD,CACOC,GAAD,IAAQ;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACAX,MAAAA,SAAS,CAACO,GAAG,CAACG,IAAJ,CAASC,OAAV,CAAT;AACH,KAJD;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,QAAQ,EAAE;AAFA;AAHH,GAAb;;AASA,QAAMC,WAAW,GAAGf,EAAD,IAAO;AACtBM,IAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKJ,KAAK,CAACoB;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAEKnB,MAAM,CAACoB,GAAP,CAAYC,GAAD,iBACR;AAAK,QAAA,OAAO,EAAE,MAAKH,WAAW,CAACG,GAAG,CAAClB,EAAL,CAA9B;AAAwC,QAAA,SAAS,EAAEJ,KAAK,CAACuB,OAAN,GAAgB,aAAhB,GAAgC,QAAnF;AAA6F,QAAA,GAAG,EAAG,IAAG1B,QAAQ,GAAGyB,GAAG,CAACE,aAAc,EAAnI;AAAsI,QAAA,GAAG,EAAC;AAA1I;AAAA;AAAA;AAAA;AAAA,cADH;AAFL;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,aAAjB;AAA+B,MAAA,IAAI,EAAEV;AAArC;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAzCQf,O;;KAAAA,O;AA2CT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './RowPost.css'\nimport YouTube from 'react-youtube'\nimport {imageUrl} from '../../constants/constants'\nimport axios from '../../axios'\n\nfunction RowPost(props) {\n    const [movies, setMovies] = useState([])\n    cosnt [id,setId] = useState('')\n\n    useEffect(() => {\n        axios.get(props.url)\n        .then((res)=> {\n            console.log(res.data.results)\n            setMovies(res.data.results)\n        }\n\n        )\n    }, [])\n\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 0,\n        },\n      };\n\n    const handleMovie =(id) =>{\n        console.log(id)\n    }\n    return (\n        <div className=\"row\">\n            <h2>{props.title}</h2>\n            <div className=\"posters\">\n\n                {movies.map((obj)=>\n                    <img onClick={() =>handleMovie(obj.id)} className={props.isSmall ? 'smallPoster' : 'poster'} src={` ${imageUrl + obj.backdrop_path}`} alt=\"POsters\" />\n                )}\n                \n            </div>\n            <YouTube videoId=\"2g811Eo7K8U\" opts={opts} />\n        </div>\n\n        \n    )\n}\n\nexport default RowPost\n"]},"metadata":{},"sourceType":"module"}